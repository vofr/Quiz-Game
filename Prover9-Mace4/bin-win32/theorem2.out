============================== Prover9 ===============================
Prover9 (32) version Dec-2007, Dec 2007.
Process 10412 was started by vasio on DESKTOP-250C2NI,
Wed Jan 18 18:09:08 2023
The command was "prover9".
============================== end of head ===========================

============================== INPUT =================================

formulas(assumptions).
m(a) -> -p(a) & -i(a).
m(b) -> -p(b) & -i(b).
m(c) -> -p(c) & -i(c).
m(d) -> -p(d) & -i(d).
m(e) -> -p(e) & -i(e).
p(a) -> -m(a) & -i(a).
p(b) -> -m(b) & -i(b).
p(c) -> -m(c) & -i(c).
p(d) -> -m(d) & -i(d).
p(e) -> -m(e) & -i(e).
i(a) -> -p(a) & -m(a).
i(b) -> -p(b) & -m(b).
i(c) -> -p(c) & -m(c).
i(d) -> -p(d) & -m(d).
i(e) -> -p(e) & -m(e).
b1 -> m(a) & m(b) | m(a) & m(c) | m(a) & m(d) | m(a) & m(e) | m(b) & m(c) | m(b) & m(d) | m(b) & m(e) | m(c) & m(d) | m(c) & m(e) | m(d) & m(e).
b1.
b2 -> p(a) & -p(b) & -p(c) & -p(d) & -p(e) | p(b) & -p(a) & -p(c) & -p(d) & -p(e) | -p(a) & -p(b) & p(c) & -p(d) & -p(e) | -p(a) & -p(b) & -p(c) & p(d) & -p(e) | -p(a) & -p(b) & -p(c) & -p(d) & p(e).
b2.
b3 -> i(a) & i(b) | i(a) & i(c) | i(a) & i(d) | i(a) & i(e) | i(b) & i(c) | i(b) & i(d) | i(b) & i(e) | i(c) & i(d) | i(c) & i(e) | i(d) & i(e).
b3.
b5 -> m(a) | p(a) | i(a).
b5 -> m(b) | p(b) | i(b).
b5 -> m(c) | p(c) | i(c).
b5 -> m(d) | p(d) | i(d).
b5 -> m(e) | p(e) | i(e).
b5.
b6 -> -i(a).
b6.
p(b).
b7 -> -i(b).
b7.
m(e).
end_of_list.

formulas(goals).
m(a) & m(e) & p(b) & i(c) & i(d).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 m(a) -> -p(a) & -i(a) # label(non_clause).  [assumption].
2 m(b) -> -p(b) & -i(b) # label(non_clause).  [assumption].
3 m(c) -> -p(c) & -i(c) # label(non_clause).  [assumption].
4 m(d) -> -p(d) & -i(d) # label(non_clause).  [assumption].
5 m(e) -> -p(e) & -i(e) # label(non_clause).  [assumption].
6 p(a) -> -m(a) & -i(a) # label(non_clause).  [assumption].
7 p(b) -> -m(b) & -i(b) # label(non_clause).  [assumption].
8 p(c) -> -m(c) & -i(c) # label(non_clause).  [assumption].
9 p(d) -> -m(d) & -i(d) # label(non_clause).  [assumption].
10 p(e) -> -m(e) & -i(e) # label(non_clause).  [assumption].
11 i(a) -> -p(a) & -m(a) # label(non_clause).  [assumption].
12 i(b) -> -p(b) & -m(b) # label(non_clause).  [assumption].
13 i(c) -> -p(c) & -m(c) # label(non_clause).  [assumption].
14 i(d) -> -p(d) & -m(d) # label(non_clause).  [assumption].
15 i(e) -> -p(e) & -m(e) # label(non_clause).  [assumption].
16 b1 -> m(a) & m(b) | m(a) & m(c) | m(a) & m(d) | m(a) & m(e) | m(b) & m(c) | m(b) & m(d) | m(b) & m(e) | m(c) & m(d) | m(c) & m(e) | m(d) & m(e) # label(non_clause).  [assumption].
17 b2 -> p(a) & -p(b) & -p(c) & -p(d) & -p(e) | p(b) & -p(a) & -p(c) & -p(d) & -p(e) | -p(a) & -p(b) & p(c) & -p(d) & -p(e) | -p(a) & -p(b) & -p(c) & p(d) & -p(e) | -p(a) & -p(b) & -p(c) & -p(d) & p(e) # label(non_clause).  [assumption].
18 b3 -> i(a) & i(b) | i(a) & i(c) | i(a) & i(d) | i(a) & i(e) | i(b) & i(c) | i(b) & i(d) | i(b) & i(e) | i(c) & i(d) | i(c) & i(e) | i(d) & i(e) # label(non_clause).  [assumption].
19 b5 -> m(a) | p(a) | i(a) # label(non_clause).  [assumption].
20 b5 -> m(b) | p(b) | i(b) # label(non_clause).  [assumption].
21 b5 -> m(c) | p(c) | i(c) # label(non_clause).  [assumption].
22 b5 -> m(d) | p(d) | i(d) # label(non_clause).  [assumption].
23 b5 -> m(e) | p(e) | i(e) # label(non_clause).  [assumption].
24 b6 -> -i(a) # label(non_clause).  [assumption].
25 b7 -> -i(b) # label(non_clause).  [assumption].
26 m(a) & m(e) & p(b) & i(c) & i(d) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-m(a) | -p(a).  [clausify(1)].
-m(a) | -i(a).  [clausify(1)].
-m(b) | -p(b).  [clausify(2)].
-m(b) | -i(b).  [clausify(2)].
-m(c) | -p(c).  [clausify(3)].
-m(c) | -i(c).  [clausify(3)].
-m(d) | -p(d).  [clausify(4)].
-m(d) | -i(d).  [clausify(4)].
-m(e) | -p(e).  [clausify(5)].
-m(e) | -i(e).  [clausify(5)].
-p(a) | -m(a).  [clausify(6)].
-p(a) | -i(a).  [clausify(6)].
-p(b) | -m(b).  [clausify(7)].
-p(b) | -i(b).  [clausify(7)].
-p(c) | -m(c).  [clausify(8)].
-p(c) | -i(c).  [clausify(8)].
-p(d) | -m(d).  [clausify(9)].
-p(d) | -i(d).  [clausify(9)].
-p(e) | -m(e).  [clausify(10)].
-p(e) | -i(e).  [clausify(10)].
-i(a) | -p(a).  [clausify(11)].
-i(a) | -m(a).  [clausify(11)].
-i(b) | -p(b).  [clausify(12)].
-i(b) | -m(b).  [clausify(12)].
-i(c) | -p(c).  [clausify(13)].
-i(c) | -m(c).  [clausify(13)].
-i(d) | -p(d).  [clausify(14)].
-i(d) | -m(d).  [clausify(14)].
-i(e) | -p(e).  [clausify(15)].
-i(e) | -m(e).  [clausify(15)].
-b1 | m(a) | m(b) | m(c) | m(d).  [clausify(16)].
-b1 | m(a) | m(b) | m(c) | m(e).  [clausify(16)].
-b1 | m(a) | m(b) | m(d) | m(e).  [clausify(16)].
-b1 | m(a) | m(c) | m(d) | m(e).  [clausify(16)].
-b1 | m(b) | m(c) | m(d) | m(e).  [clausify(16)].
b1.  [assumption].
-b2 | p(a) | p(b) | p(c) | p(d) | p(e).  [clausify(17)].
-b2 | -p(b) | -p(a).  [clausify(17)].
-b2 | -p(c) | -p(a).  [clausify(17)].
-b2 | -p(c) | -p(b).  [clausify(17)].
-b2 | -p(c) | -p(d).  [clausify(17)].
-b2 | -p(c) | -p(e).  [clausify(17)].
-b2 | -p(d) | -p(a).  [clausify(17)].
-b2 | -p(d) | -p(b).  [clausify(17)].
-b2 | -p(d) | -p(e).  [clausify(17)].
-b2 | -p(e) | -p(a).  [clausify(17)].
-b2 | -p(e) | -p(b).  [clausify(17)].
b2.  [assumption].
-b3 | i(a) | i(b) | i(c) | i(d).  [clausify(18)].
-b3 | i(a) | i(b) | i(c) | i(e).  [clausify(18)].
-b3 | i(a) | i(b) | i(d) | i(e).  [clausify(18)].
-b3 | i(a) | i(c) | i(d) | i(e).  [clausify(18)].
-b3 | i(b) | i(c) | i(d) | i(e).  [clausify(18)].
b3.  [assumption].
-b5 | m(a) | p(a) | i(a).  [clausify(19)].
-b5 | m(b) | p(b) | i(b).  [clausify(20)].
-b5 | m(c) | p(c) | i(c).  [clausify(21)].
-b5 | m(d) | p(d) | i(d).  [clausify(22)].
-b5 | m(e) | p(e) | i(e).  [clausify(23)].
b5.  [assumption].
-b6 | -i(a).  [clausify(24)].
b6.  [assumption].
p(b).  [assumption].
-b7 | -i(b).  [clausify(25)].
b7.  [assumption].
m(e).  [assumption].
-m(a) | -m(e) | -p(b) | -i(c) | -i(d).  [deny(26)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ b1, b3, b5, b2, b6, b7, m, i, p ]).
Function symbol precedence:  function_order([ b, e, a, c, d ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== PROOF =================================

% Proof 1 at 0.08 (+ 0.16) seconds.
% Length of proof is 33.
% Level of proof is 5.
% Maximum clause weight is 9.
% Given clauses 0.

5 m(e) -> -p(e) & -i(e) # label(non_clause).  [assumption].
7 p(b) -> -m(b) & -i(b) # label(non_clause).  [assumption].
17 b2 -> p(a) & -p(b) & -p(c) & -p(d) & -p(e) | p(b) & -p(a) & -p(c) & -p(d) & -p(e) | -p(a) & -p(b) & p(c) & -p(d) & -p(e) | -p(a) & -p(b) & -p(c) & p(d) & -p(e) | -p(a) & -p(b) & -p(c) & -p(d) & p(e) # label(non_clause).  [assumption].
18 b3 -> i(a) & i(b) | i(a) & i(c) | i(a) & i(d) | i(a) & i(e) | i(b) & i(c) | i(b) & i(d) | i(b) & i(e) | i(c) & i(d) | i(c) & i(e) | i(d) & i(e) # label(non_clause).  [assumption].
19 b5 -> m(a) | p(a) | i(a) # label(non_clause).  [assumption].
24 b6 -> -i(a) # label(non_clause).  [assumption].
26 m(a) & m(e) & p(b) & i(c) & i(d) # label(non_clause) # label(goal).  [goal].
36 -m(e) | -i(e).  [clausify(5)].
38 -p(b) | -i(b).  [clausify(7)].
49 -b2 | -p(b) | -p(a).  [clausify(17)].
59 b2.  [assumption].
61 -b3 | i(a) | i(b) | i(c) | i(e).  [clausify(18)].
62 -b3 | i(a) | i(b) | i(d) | i(e).  [clausify(18)].
65 b3.  [assumption].
66 -b5 | m(a) | p(a) | i(a).  [clausify(19)].
71 b5.  [assumption].
72 -b6 | -i(a).  [clausify(24)].
73 b6.  [assumption].
74 p(b).  [assumption].
77 m(e).  [assumption].
78 -m(a) | -m(e) | -p(b) | -i(c) | -i(d).  [deny(26)].
79 -m(a) | -i(c) | -i(d).  [copy(78),unit_del(b,77),unit_del(c,74)].
84 -p(a).  [back_unit_del(49),unit_del(a,59),unit_del(b,74)].
87 i(a) | i(b) | i(d) | i(e).  [back_unit_del(62),unit_del(a,65)].
88 i(a) | i(b) | i(c) | i(e).  [back_unit_del(61),unit_del(a,65)].
92 m(a) | i(a).  [back_unit_del(66),unit_del(a,71),unit_del(c,84)].
93 -i(a).  [back_unit_del(72),unit_del(a,73)].
94 -i(b).  [back_unit_del(38),unit_del(a,74)].
96 -i(e).  [back_unit_del(36),unit_del(a,77)].
97 m(a).  [back_unit_del(92),unit_del(b,93)].
99 i(c).  [back_unit_del(88),unit_del(a,93),unit_del(b,94),unit_del(d,96)].
100 i(d).  [back_unit_del(87),unit_del(a,93),unit_del(b,94),unit_del(d,96)].
101 $F.  [back_unit_del(79),unit_del(a,97),unit_del(b,99),unit_del(c,100)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=107. Kept=73. proofs=1.
Usable=0. Sos=20. Demods=0. Limbo=4, Disabled=116. Hints=0.
Weight_deleted=0. Literals_deleted=0.
Forward_subsumed=33. Back_subsumed=9.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=40.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=15. Nonunit_bsub_feature_tests=63.
Megabytes=0.10.
User_CPU=0.08, System_CPU=0.17, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 10412 exit (max_proofs) Wed Jan 18 18:09:08 2023
